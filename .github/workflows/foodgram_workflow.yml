name: Django-app workflow 
 
on: [push] 
 
jobs: 
  tests: 
    runs-on: ubuntu-latest 
 
    steps: 
    - uses: actions/checkout@v2 
    - name: Set up Python  
      uses: actions/setup-python@v2 
      with: 
        python-version: 3.7 
 
    - name: Install dependencies 
      run: | 
        python -m pip install --upgrade pip  
        pip install flake8 
        pip install -r backend/requirements.txt  
 
    - name: Test with flake8 
      run: | 
        python -m flake8 
 
  build_backend_frontend:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login Docker account
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend to DockerHub
        uses: docker/build-push-action@v2
        with:
          file: backend/Dockerfile
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/infraa:v.2
      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v2
        with:
          file: frontend/Dockerfile
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/infraa:v.2

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    name: Deploy project 
    needs: build_backend_frontend
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm backend
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
 
 
  send_message_telegram: 
    runs-on: ubuntu-latest 
    needs: deploy 
    steps: 
      - name: send message 
        uses: appleboy/telegram-action@master 
        with: 
          to: ${{ secrets.TELEGRAM_TO }} 
          token: ${{ secrets.TELEGRAM_TOKEN }} 
          massage: ${{ github.workflow }} успешно выполнен!
